{"version":3,"sources":["state/hello/helloActions.ts","state/hello/helloReducer.ts","state/root/rootReducer.ts","config/index.ts","state/hello/helloApi.ts","state/hello/helloSaga.ts","state/root/rootSaga.ts","Components/PageRouter/PageRoutes.ts","state/store/configureStore.ts","Components/TimelapseForm/TimelapseForm.tsx","Components/Pages/HomePage/HomePage.tsx","Components/PageRouter/PageRouter.tsx","Components/AppLayout/AppLayout.tsx","Components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["HelloAction","INITIAL_STATE","message","rootReducer","combineReducers","hello","state","arguments","length","undefined","action","type","SayHelloAsync","SayHelloResult","config","api","endpoint","helloApi","name","requestBody","request","method","mode","headers","Content-Type","body","JSON","stringify","fetch","then","res","json","resultJson","catch","error","console","sayHelloAsync","watchSayHelloAsync","result","regenerator_default","a","wrap","_context","prev","next","call","sent","put","stop","_marked","this","_context2","takeEvery","_marked2","rootSaga","all","fork","rootSaga_marked","PageId","configureStore","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","moment","require","TimelapseFormImpl","handleChange","event","preventDefault","formRecordingDuration","_this","props","form","getFieldValue","formRecordingDurationUnit","formFps","formNumFrames","formIntervalSec","formTimelapseDuration","formTimelapseDurationUnit","formTimelapseDurationSec","duration","as","log","concat","numFrames","recordingDurationSec","recordingDuration","setFieldsValue","getFieldDecorator","timelapseDurationUnitSelector","initialValue","react_default","createElement","es_select","Option","value","recordingDurationUnitSelector","recordingIntervalUnitSelector","es_form","labelCol","span","wrapperCol","onChange","onSubmit","Item","label","rules","required","input","autoFocus","addonAfter","style","width","offset","es_button","size","htmlType","React","Component","TimelapseForm","Form","create","HomePage","_React$Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","className","TimelapseForm_TimelapseForm","PageRoutes","Home","component","id","path","title","PageRouter","Switch","Route","withRouter","Content","Layout","AppLayout","layout","minHeight","margin","Components_PageRouter_PageRouter","connect","App","es","HashRouter","Components_AppLayout_AppLayout","Boolean","window","location","hostname","match","ReactDOM","render","Components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7176d7ee.chunk.js","sourcesContent":["\nexport type IHelloAction = ISayHelloAsyncAction |\n  ISayHelloResultAction;\n\nexport enum HelloAction {\n  SayHelloAsync = \"SayHelloAsync\",\n  SayHelloResult = \"SayHelloResult\"\n}\n\nexport interface ISayHelloAsyncAction {\n  type: HelloAction.SayHelloAsync,\n  name: string\n}\n\nexport interface ISayHelloResultAction {\n  type: HelloAction.SayHelloResult,\n  message: string\n}\n\nexport function sayHello(name: string): ISayHelloAsyncAction {\n  return {\n    type: HelloAction.SayHelloAsync,\n    name\n  }\n}\n\nexport function sayHelloResult(message: string): ISayHelloResultAction {\n  return {\n    type: HelloAction.SayHelloResult,\n    message\n  }\n}\n","import {HelloAction, IHelloAction} from \"./helloActions\";\n\nexport interface IHelloState {\n  message: string\n}\n\nexport const INITIAL_STATE: IHelloState = {\n  message: \"Loading....\"\n};\n\nexport function helloReducer(\n  state: IHelloState = INITIAL_STATE,\n  action: IHelloAction\n): IHelloState {\n  switch (action.type) {\n    case HelloAction.SayHelloAsync: {\n      return state;\n    }\n\n    case HelloAction.SayHelloResult: {\n      return {\n        message: action.message\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport { helloReducer as hello, IHelloState } from \"../hello/helloReducer\";\n\nexport interface IRootState {\n  hello: IHelloState\n}\n\nexport const rootReducer = combineReducers<IRootState>({\n  hello\n});\n","import * as proces from \"process\";\n\ninterface ApiConfig {\n  endpoint: string;\n}\n\ninterface Config {\n  api: ApiConfig\n}\n\nfunction getConfig(): Config {\n  if (process.env[\"NODE_ENV\"] === \"production\") {\n    return {\n      api: {\n        endpoint: \"https://asjo188lu2.execute-api.us-east-1.amazonaws.com/latest\"\n      }\n    }\n  } else {\n    return {\n      api: {\n        endpoint: \"http://localhost:5000/api\"\n      }\n    }\n  }\n}\n\nconst config = getConfig();\nexport default config;\n","import { IHelloResult } from \"./helloResult\";\nimport config from \"../../config\"\n\nexport function helloApi(name: string): Promise<IHelloResult> {\n  const requestBody = {\n    name\n  };\n  const request = {\n    method: \"POST\",\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(requestBody)\n  };\n  const responsePromise = fetch(config.api.endpoint + \"/hello\", request);\n  return responsePromise\n    .then((res: Response) => {\n      return res.json();\n    }).then((resultJson: any) => {\n      return {\n        message: resultJson.message\n      }\n    })\n    .catch((error: any) => {\n      console.error(\"helloApi failed\" + JSON.stringify(error));\n      throw \"helloApi failed\";\n    });\n}\n","import { call, takeEvery, put } from \"redux-saga/effects\";\n\nimport { IHelloResult } from \"./helloResult\";\nimport { HelloAction, ISayHelloAsyncAction, sayHelloResult } from \"./helloActions\";\nimport { helloApi } from \"./helloApi\";\n\nexport function* sayHelloAsync(action: ISayHelloAsyncAction): IterableIterator<any> {\n  const result: IHelloResult = yield call(helloApi, action.name);\n  yield put(sayHelloResult(result.message))\n}\n\nexport function* watchSayHelloAsync() {\n  yield takeEvery(\n    HelloAction.SayHelloAsync,\n    sayHelloAsync\n  )\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport { watchSayHelloAsync } from \"../hello/helloSaga\";\n\nfunction* rootSaga() {\n  yield all([\n    fork(watchSayHelloAsync)\n  ]);\n}\n\nexport default rootSaga;\n","import HomePage from \"../Pages/HomePage/HomePage\";\n\nexport enum PageId {\n  Home = \"Home\"\n}\n\nexport interface IPageRoute {\n  component: React.ComponentClass,\n  id: PageId,\n  path: string,\n  title: string\n}\n\nexport class PageRoutes {\n  public static Home: IPageRoute = {\n    component: HomePage,\n    id: PageId.Home,\n    path: \"/\",\n    title: \"Timelapse Solver\"\n  }\n}\n","import { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { rootReducer } from \"../root/rootReducer\";\nimport rootSaga from \"../root/rootSaga\";\n\nexport const configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\n","import React from 'react';\n\nimport { Form, Input, Select, Button } from 'antd';\nimport { FormComponentProps } from \"antd/es/form\";\n\nconst moment = require('moment');\n\ninterface ITimelapseFormProps extends FormComponentProps {\n}\n\nclass TimelapseFormImpl extends React.Component<ITimelapseFormProps> {\n\n  public render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const timelapseDurationUnitSelector = getFieldDecorator('timelapseDurationUnit', {\n      initialValue: 'seconds',\n    })(\n      <Select>\n        <Select.Option value=\"seconds\">sec</Select.Option>\n        <Select.Option value=\"minutes\">min</Select.Option>\n        <Select.Option value=\"hours\">hr</Select.Option>\n        <Select.Option value=\"days\">day</Select.Option>\n      </Select>\n    );\n\n    const recordingDurationUnitSelector = getFieldDecorator('recordingDurationUnit', {\n      initialValue: 'minutes',\n    })(\n      <Select>\n        <Select.Option value=\"seconds\">sec</Select.Option>\n        <Select.Option value=\"minutes\">min</Select.Option>\n        <Select.Option value=\"hours\">hr</Select.Option>\n        <Select.Option value=\"days\">day</Select.Option>\n      </Select>\n    );\n\n    const recordingIntervalUnitSelector = getFieldDecorator('recordingIntervalUnit', {\n      initialValue: 'seconds',\n    })(\n      <Select>\n        <Select.Option value=\"seconds\">sec</Select.Option>\n        <Select.Option value=\"minutes\">min</Select.Option>\n        <Select.Option value=\"hours\">hr</Select.Option>\n        <Select.Option value=\"days\">day</Select.Option>\n      </Select>\n    );\n\n    return (\n      <Form labelCol={{ span: 9 }} wrapperCol={{ span:13 }} onChange={this.handleChange} onSubmit={this.handleChange}>\n        <Form.Item label={\"Video Duration\"}>\n          {getFieldDecorator('timelapseDuration', {\n            initialValue: 10,\n            rules: [{ required: false, message: 'Please input the expected timelapse length.' }],\n          })(\n            <Input autoFocus={true} addonAfter={timelapseDurationUnitSelector} style={{ width: '100%' }} />\n          )}\n        </Form.Item>\n\n        <Form.Item label={\"Frames / sec\"}>\n          {getFieldDecorator('fps', {\n            initialValue: 30,\n            rules: [{ required: false, message: 'Please input the expected fps.' }],\n          })(\n            <Input style={{ width: '100%' }}  />\n          )}\n        </Form.Item>\n\n        <Form.Item label={\"Number of frames\"}>\n          {getFieldDecorator('numFrames', {\n            rules: [{ required: false, message: 'Please input the expected total number of frames.' }],\n          })(\n            <Input style={{ width: '100%' }} />\n          )}\n        </Form.Item>\n\n        <Form.Item label={\"Capture Interval\"}>\n          {getFieldDecorator('intervalSec', {\n            initialValue: 6,\n            rules: [{ required: false, message: 'Please input the expected frame interval.' }],\n          })(\n            <Input addonAfter={recordingIntervalUnitSelector} style={{ width: '100%' }} />\n          )}\n        </Form.Item>\n\n\n        <Form.Item label={\"Capture Duration\"}>\n          {getFieldDecorator('recordingDuration', {\n            rules: [{ required: false, message: 'Please input the expected recording time.' }],\n          })(\n            <Input addonAfter={recordingDurationUnitSelector} style={{ width: '100%' }} />\n          )}\n        </Form.Item>\n\n        <Form.Item\n          wrapperCol={{ span: 24, offset: 0 }}\n        >\n          <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n\n      </Form>\n    );\n  }\n\n  handleChange = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const formRecordingDuration: number = +this.props.form.getFieldValue(\"recordingDuration\");\n    const formRecordingDurationUnit = this.props.form.getFieldValue(\"recordingDurationUnit\");\n    const formFps: number = this.props.form.getFieldValue(\"fps\");\n    const formNumFrames: number = +this.props.form.getFieldValue(\"numFrames\");\n    const formIntervalSec: number = +this.props.form.getFieldValue(\"intervalSec\");\n\n    const formTimelapseDuration: number = +this.props.form.getFieldValue(\"timelapseDuration\");\n    const formTimelapseDurationUnit = this.props.form.getFieldValue(\"timelapseDurationUnit\");\n    const formTimelapseDurationSec: number = +moment.duration(formTimelapseDuration, formTimelapseDurationUnit).as(\"seconds\");\n\n    console.log(\n      `\n      formTimelapseDuration=${formTimelapseDuration}\n      formTimelapseDurationSec=${formTimelapseDurationSec}\n      formTimelapseDurationUnit=${formTimelapseDurationUnit}\n      formRecordingDuration=${formRecordingDuration}\n      formRecordingDurationUnit=${formRecordingDurationUnit}\n      formFps=${formFps}\n      formNumFrames=${formNumFrames}\n      formIntervalSec=${formIntervalSec}\n      `\n    );\n\n    const numFrames = formFps * formTimelapseDurationSec;\n    const recordingDurationSec = numFrames * formIntervalSec;\n    const recordingDuration = moment.duration(recordingDurationSec, \"seconds\").as(formRecordingDurationUnit);\n\n    this.props.form.setFieldsValue({\n      recordingDuration,\n      numFrames\n    });\n\n    console.log(\n      `\n      numFrames=${numFrames}\n      recordingDurationSec=${recordingDurationSec}\n      recordingDuration=${recordingDuration}\n      `\n    );\n\n  }\n}\n\nconst TimelapseForm = Form.create({ name: 'timelapse' })(TimelapseFormImpl);\nexport default TimelapseForm;","import React from 'react';\n\nimport logo from '../../../logo.svg';\nimport './HomePage.css';\n\nimport TimelapseForm from \"../../TimelapseForm/TimelapseForm\";\n\ninterface IHomePageProps {\n}\n\nexport class HomePage extends React.Component<IHomePageProps> {\n  public render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <TimelapseForm />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React from 'react';\n\nimport { Route, Switch, withRouter } from \"react-router\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nimport { PageRoutes } from \"./PageRoutes\";\n\nclass PageRouter extends React.Component<RouteComponentProps<{}>> {\n  public render() {\n    return (\n      <Switch>\n        <Route path={PageRoutes.Home.path} component={PageRoutes.Home.component} />\n      </Switch>\n    );\n  }\n}\n\nexport default withRouter(PageRouter);\n","import React from 'react';\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nimport PageRouter from \"../PageRouter/PageRouter\";\n\nexport class AppLayout extends React.Component<RouteComponentProps<{}>> {\n  public render() {\n    return (\n      <div>\n        <Layout style={{minHeight: \"100vh\"}}>\n          <Layout>\n            <Content style={{margin: \"16px 16px\"}}>\n              <PageRouter /> {/** Main Application Window **/}\n            </Content>\n          </Layout>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect<null, null>(null, null)(AppLayout));\n","import React, { Component } from 'react';\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport { configureStore } from \"../../state/store/configureStore\";\n\nimport AppLayout from \"../AppLayout/AppLayout\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={configureStore()}>\n        <HashRouter>\n          <AppLayout />\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" name.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}